"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require("react");

var _require = require("./base");

var Type = _require.Type;

var _require2 = require("./label");

var LabeledNode = _require2.LabeledNode;

var _require3 = require("./group");

var GroupNode = _require3.GroupNode;
var preprocessMembers = _require3.preprocessMembers;

var _require4 = require("react-bootstrap");

var Accordion = _require4.Accordion;
var Panel = _require4.Panel;

function CAccordion(rawMemberDecls) {
	return new Type("accordion", function makeAccordion(ctx) {
		var _ctx$value = ctx.value;
		var value = _ctx$value === undefined ? {} : _ctx$value;
		var updateTo = ctx.updateTo;

		return new AccordionNode(value.selectedView || 0, function (key) {
			return updateTo(_extends({}, value, { selectedView: key }));
		}, preprocessMembers(rawMemberDecls, ctx));
	});
}

var AccordionNode = (function (_GroupNode) {
	_inherits(AccordionNode, _GroupNode);

	function AccordionNode(selected, select, members) {
		_classCallCheck(this, AccordionNode);

		_get(Object.getPrototypeOf(AccordionNode.prototype), "constructor", this).call(this, members);
		this._selected = selected;
		this._select = select;
	}

	_createClass(AccordionNode, [{
		key: "render",
		value: function render() {
			var _this = this;

			return React.createElement(
				Accordion,
				{ activeKey: this._selected, onSelect: this._select },
				this.mapMembers(function (_ref, i) {
					var node = _ref.node;

					if (node != undefined) {
						var label = "???";
						if (node instanceof LabeledNode) {
							label = node.label;
							node = node.inner;
						}
						return React.createElement(
							Panel,
							{ eventKey: i, header: label },
							i == _this._selected && node.render()
						);
					}
				})
			);
		}
	}]);

	return AccordionNode;
})(GroupNode);

module.exports = { CAccordion: CAccordion, AccordionNode: AccordionNode };
//# sourceMappingURL=../maps/lib/accordion.js.map