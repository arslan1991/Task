"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Path = (function () {
	function Path() {
		_classCallCheck(this, Path);
	}

	_createClass(Path, [{
		key: "ext",
		value: function ext(name) {
			return new SubPath(this, name);
		}
	}]);

	return Path;
})();

var RootPath = (function (_Path) {
	_inherits(RootPath, _Path);

	function RootPath() {
		_classCallCheck(this, RootPath);

		_get(Object.getPrototypeOf(RootPath.prototype), "constructor", this).apply(this, arguments);
	}

	_createClass(RootPath, [{
		key: "toString",
		value: function toString() {
			return "";
		}
	}]);

	return RootPath;
})(Path);

var rootPath = new RootPath();

var SubPath = (function (_Path2) {
	_inherits(SubPath, _Path2);

	function SubPath(parent, name) {
		_classCallCheck(this, SubPath);

		_get(Object.getPrototypeOf(SubPath.prototype), "constructor", this).call(this);
		this._parent = parent;
		this._name = name;
		this._asString = parent.toString() + "/" + name;
	}

	_createClass(SubPath, [{
		key: "toString",
		value: function toString() {
			return this._asString;
		}
	}]);

	return SubPath;
})(Path);

module.exports = { rootPath: rootPath };
//# sourceMappingURL=../maps/lib/path.js.map