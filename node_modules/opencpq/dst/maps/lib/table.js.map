{"version":3,"sources":["lib/table.js"],"names":[],"mappings":"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","file":"lib/table.js","sourcesContent":["var React = require(\"react\");\nvar {Table, Button, DropdownButton, MenuItem} = require(\"react-bootstrap\");\nvar {Type, Node} = require(\"./base\");\nvar {CGroup} = require(\"./group\");\n\nfunction CTable(options, columnLabels, rowType) {\n\treturn new TableType(options, columnLabels, rowType);\n}\n\nclass TableType extends Type {\n\tconstructor(options, columnLabels, rowType) {\n\t\tvar {defaultValue = []} = options;\n\t\tsuper(\"table\", function makeTable(ctx) {\n\t\t\tvar {value = defaultValue, updateTo} = ctx;\n\t\t\tvar rows = value.map((element = {}, i) => {\n\t\t\t\tfunction updateElement(newElement) {\n\t\t\t\t\tvar newList = value.slice();\n\t\t\t\t\tnewList[i] = newElement;\n\t\t\t\t\tupdateTo(newList);\n\t\t\t\t}\n\t\t\t\treturn rowType.makeNode({\n\t\t\t\t\t...ctx,\n\t\t\t\t\tvalue: element,\n\t\t\t\t\tupdateTo: updateElement,\n\t\t\t\t\trowIndex: i,\n\t\t\t\t\tpath: ctx.path.ext(i),\n\t\t\t\t});\n\t\t\t});\n\t\t\tfunction splice(...args) {\n\t\t\t\tvar newList = value.slice();\n\t\t\t\tnewList.splice.apply(newList, args);\n\t\t\t\tupdateTo(newList);\n\t\t\t}\n\t\t\treturn new TableNode({columnLabels, rows, list: value, splice});\n\t\t});\n\t}\n}\n\nclass TableNode extends Node {\n\tget rows() {\n\t\treturn this.__options.rows;\n\t}\n\trender() {\n\t\t// TODO: drag'n'drop\n\t\tvar {columnLabels, rows, list, splice} = this.__options;\n\t\treturn <Table className=\"table\">\n\t\t\t<colgroup>\n\t\t\t\t<col className=\"col-buttons\"/>\n\t\t\t\t{[for ({name} of columnLabels) <col className={`col-${name}`} />]}\n\t\t\t</colgroup>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>\n\t\t\t\t\t\t<Button className=\"dim\" onClick={() => splice(0, 0, undefined)}>+</Button>\n\t\t\t\t\t</th>\n\t\t\t\t\t{[for ({label} of columnLabels) <th>{label}</th>]}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{rows.length === 0 ?\n\t\t\t\t <tr>\n\t\t\t\t \t<td colSpan={columnLabels.length + 1}>\n\t\t\t\t \t\t<div className=\"validate validate-info\">(no entries)</div>\n\t\t\t\t\t</td>\n\t\t\t\t </tr> :\n\t\t\t\t rows.map((row, i) => {\n\t\t\t\t\treturn <tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<DropdownButton title=\"\" className=\"dim list-ops-button\">\n\t\t\t\t\t\t\t\t<MenuItem onSelect={() => splice(i+1, 0, undefined)}>insert</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onSelect={() => splice(i+1, 0, list[i])}>copy</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onSelect={() => splice(i  , 1)}>delete</MenuItem>\n\t\t\t\t\t\t\t\t{i > 0 && <MenuItem onSelect={() => splice(i-1, 2, list[i], list[i-1])}>up</MenuItem>}\n\t\t\t\t\t\t\t\t{i < list.length - 1 && <MenuItem onSelect={() => splice(i  , 2, list[i+1], list[i])}>down</MenuItem>}\n\t\t\t\t\t\t\t</DropdownButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t{columnLabels.map(({name}) => {\n\t\t\t\t\t\t\tvar member = row.member(name);\n\t\t\t\t\t\t\tvar field = member == undefined ? undefined : member.render();\n\t\t\t\t\t\t\treturn <td>{field}</td>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>;\n\t\t\t\t }\n\t\t\t\t)}\n\t\t\t</tbody>\n\t\t</Table>;\n\t}\n}\n\nfunction ccolumn(name, label) {\n\treturn {name, label};\n}\n\nmodule.exports = {CTable, TableType, ccolumn};\n"],"sourceRoot":"/source/"}