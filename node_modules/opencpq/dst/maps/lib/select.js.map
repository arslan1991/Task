{"version":3,"sources":["lib/select.js"],"names":[],"mappings":"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","file":"lib/select.js","sourcesContent":["var React = require(\"react\");\nvar {ButtonGroup, Button, DropdownButton, MenuItem} = require(\"react-bootstrap\");\nvar {HBox} = require(\"./display\");\nvar {Type, Node} = require(\"./base\");\nvar {CValidate, renderWithValidation} = require(\"./validation\");\nvar {CUnit} = require(\"./primitives\");\nvar {confirmOrRetractButton} = require(\"./confirm-retract\");\n\nfunction ccase(name, label = name, type = CUnit()) {\n\treturn {name, label, type, mode: \"plain\", isDefault: false};\n}\n\nfunction cdefault(case_) {\n\treturn {...case_, isDefault: true};\n}\n\n// For the value:\nfunction csel($case, $detail) {\n\treturn {$case, $detail};\n}\n\nfunction processCases(ctx, rawCases) {\n\tvar result = [];\n\tfunction process(c) {\n\t\tif (c == undefined) {\n\t\t\t// do nothing\n\t\t}\n\t\telse if (c instanceof Array)\n\t\t\tc.forEach(process);\n\t\telse if (c instanceof Function)\n\t\t\tprocess(c(ctx));\n\t\telse\n\t\t\tresult.push(c);\n\t}\n\tprocess(rawCases);\n\treturn result;\n}\n\nvar modes = [\"plain\", \"warning\", \"error\", \"hidden\"];\nfunction modeIdx(mode) { return modes.indexOf(mode); }\n\nfunction findCaseWithBestMode(cases) {\n\tvar i = modes.length;\n\tvar bestCase = undefined;\n\tcases.forEach(case_ => {\n\t\tvar caseModeIdx = modeIdx(case_.mode);\n\t\tif (caseModeIdx < i) {\n\t\t\ti = caseModeIdx;\n\t\t\tbestCase = case_\n\t\t}\n\t});\n\treturn bestCase;\n}\n\n/**\n * For the basic usage of CSelect simply pass an array of cases as\n * created by ccase(...).  However, to provide some flexibility the\n * parameter of CSelect is processed as follows:\n * - For an array, process all its elements recursively.\n * - For a function, apply the function to the context and\n *   process the return value recursively.\n * - An undefined value is simply ignored.\n * - Otherwise the value is expected to be a case description (as\n *   returned by ccase(...)) and used as a menu entry.\n * This way for example a sub-range of menu entries can be made\n * dependent on the run-time context.\n */\nfunction CSelect(rawCases) {\n\treturn new Type(\"select\", function makeSelect(ctx) {\n\t\tvar {value, updateTo, problems} = ctx;\n\t\tvar cases = processCases(ctx, rawCases);\n\t\tvar defaultCase =\n\t\t\tcases.find(x => x.isDefault) ||\n\t\t\tfindCaseWithBestMode(cases) ||\n\t\t\tcases[0];\n\t\tvar userSelected = value != undefined\n\t\tif (!userSelected)\n\t\t\tvalue = csel(defaultCase.name);\n\t\tfunction retract() {\n\t\t\tupdateTo(undefined);\n\t\t}\n\t\tvar {$case: caseName, $detail: detail} = value;\n\t\tfunction getCase(name) {\n\t\t\treturn cases.find(x => x.name === name);\n\t\t}\n\t\tfunction updateCase(newCaseName) {\n\t\t\tupdateTo(csel(newCaseName));\n\t\t}\n\t\tfunction updateDetail(newDetail) {\n\t\t\tupdateTo(csel(caseName, newDetail));\n\t\t}\n\t\tvar currentCase = getCase(caseName);\n\t\tif (currentCase == undefined)\n\t\t\tcurrentCase = {\n\t\t\t\tname: caseName,\n\t\t\t\tlabel: `unknown option: ${caseName}`,\n\t\t\t\ttype: CUnit(),\n\t\t\t\tmode: \"error\"\n\t\t\t};\n\t\tvar {mode, messages = []} = currentCase;\n\t\tmessages = [for (m of messages) problems.add(m)];\n\t\tvar detailNode = currentCase.type.makeNode({...ctx, value: detail, updateTo: updateDetail});\n\t\treturn new SelectNode({cases, caseName, currentCase, userSelected, retract, mode, messages, detailNode, updateCase});\n\t});\n}\n\nclass SelectNode extends Node {\n\tget caseName() {\n\t\treturn this.__options.caseName;\n\t}\n\tget value() {\n\t\treturn this.caseName;\n\t}\n\tget label() {\n\t\tvar {cases, caseName} = this.__options;\n\t\treturn cases.find(c => c.name == caseName).label;\n\t}\n\trender() {\n\t\tvar {cases, caseName, currentCase, userSelected, retract, mode, messages, detailNode, updateCase} = this.__options;\n\t\tvar menu = renderWithValidation(\n\t\t\t<ButtonGroup>\n\t\t\t\t<DropdownButton title={currentCase.label} className={`select-select select-mode-${mode}`}>\n\t\t\t\t\t{[for ({name, label, mode} of cases)\n\t\t\t\t\t\t<MenuItem className={`select-option option-mode-${mode}`} eventKey={name} onSelect={updateCase}>{label}</MenuItem>\n\t\t\t\t\t ]}\n\t\t\t\t</DropdownButton>\n\t\t\t\t{confirmOrRetractButton(userSelected, () => updateCase(currentCase.name), retract)}\n\t\t\t</ButtonGroup>,\n\t\t\tmessages\n\t\t);\n\t\tvar detail = detailNode.render();\n\t\treturn <div>\n\t\t\t{menu}\n\t\t\t{detail == undefined ? undefined : <div className=\"select-detail\">{detail}</div>}\n\t\t</div>;\n\t}\n}\n\n// Coding and using \"unanswered\" could be shown in a modelling demo.\nfunction unansweredCase(label) {\n\treturn cdefault(ccase(\"unanswered\", label, CValidate(\n\t\t(node, {warning}) => warning(\"No value selected.\")\n\t)));\n}\n\n\nfunction CEither(rawOptions = {}, thenType, elseType) {\n\treturn new Type(\"either\", function makeEither(ctx) {\n\t\tvar {value = {}, updateTo} = ctx;\n\t\t// TODO Support validation of the choice.\n\t\tvar options = {...rawOptions};\n\t\tif (options.defaultValue === undefined)\n\t\t\toptions.defaultValue = false;\n\t\tif (options.disabled == undefined)\n\t\t\toptions.disabled = false;\n\t\tvar {$case: choice, $detail: detail} = value;\n\t\tvar userSelected = choice !== undefined;\n\t\tif (!userSelected)\n\t\t\tchoice = options.defaultValue;\n\t\tvar detailType = choice ? thenType : elseType;\n\t\tif (detailType == undefined)\n\t\t\tdetailType = CUnit();\n\t\tfunction retract() {\n\t\t\tupdateTo(undefined);\n\t\t}\n\t\tfunction updateChoice(newChoice) {\n\t\t\tupdateTo(csel(newChoice));\n\t\t}\n\t\tfunction updateDetail(newDetail) {\n\t\t\tupdateTo(csel(choice, newDetail));\n\t\t}\n\t\tvar detailNode = detailType.makeNode({...ctx, value: detail, updateTo: updateDetail});\n\t\treturn new EitherNode({...options, userSelected, retract, choice, detailNode, updateChoice});\n\t});\n}\n\nclass EitherNode extends Node {\n\trender() {\n\t\tvar {disabled, userSelected, retract, choice, detailNode, updateChoice} = this.__options;\n\t\tvar choice = <span>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={choice}\n\t\t\t\tonChange={e => updateChoice(e.target.checked)}\n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t\t{confirmOrRetractButton(userSelected, () => updateChoice(this.__options.choice), retract, \"xsmall\")}\n\t\t</span>;\n\t\tvar detail = detailNode.render();\n\t\treturn <div>\n\t\t\t{choice}\n\t\t\t{detail}\n\t\t</div>;\n\t}\n\tget value() {\n\t\treturn this.__options.choice;\n\t}\n}\n\n\nmodule.exports = {\n\tCSelect, SelectNode, ccase, cdefault, unansweredCase, csel,\n\tCEither, EitherNode,\n};\n"],"sourceRoot":"/source/"}