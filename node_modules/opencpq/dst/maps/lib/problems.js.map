{"version":3,"sources":["lib/problems.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;eACJ,OAAO,CAAC,iBAAiB,CAAC;;IAA9C,KAAK,YAAL,KAAK;IAAE,SAAS,YAAT,SAAS;;gBACF,OAAO,CAAC,QAAQ,CAAC;;IAA/B,IAAI,aAAJ,IAAI;IAAE,IAAI,aAAJ,IAAI;;gBACF,OAAO,CAAC,aAAa,CAAC;;IAA9B,IAAI,aAAJ,IAAI;;AAET,IAAI,QAAQ,GAAG;AACd,MAAK,EAAE,YAAY;AACnB,QAAO,EAAE,cAAc;CACvB,CAAA;;IAEK,QAAQ;AACF,UADN,QAAQ,GACC;wBADT,QAAQ;;AAEZ,MAAI,CAAC,YAAY,GAAG,EAAE,CAAC;EACvB;;cAHI,QAAQ;;SAIV,aAAC,OAAO,EAAE;AACZ,UAAO,gBAAO,OAAO,IAAE,QAAQ,eAAa,IAAI,CAAC,YAAY,CAAC,MAAM,AAAE,GAAC,CAAC;AACxE,OAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,UAAO,OAAO,CAAC;GACf;;;SACI,iBAAG;AACP,UAAO,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC;GACrC;;;SACU,qBAAC,EAAE,EAAE;AACf,UAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;GACjC;;;SACK,kBAAG;;;AACR,OAAI,IAAI;;;;;;;0BACwB,MAAK,YAAY;;UAA1C,KAAK,eAAL,KAAK;UAAE,GAAG,eAAH,GAAG;UAAE,QAAQ,eAAR,QAAQ;;UACrB,KAAK,KAAK,MAAM;kBACnB;;;QACC;;WAAI,SAAS,2BAAyB,KAAK,AAAG;SAC7C,oBAAC,SAAS,IAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,AAAC,GAAE;SACnC,GAAG;SACJ;;YAAG,IAAI,EAAE,GAAG,GAAG,QAAQ,AAAC;UAAE,GAAG;UAAK;SAC9B;QACD;;;;;;;;;;;;;;;;;;;OACP,CAAA;;AAED,UAAO;AAAC,SAAK;MAAC,SAAS,EAAC,UAAU;IAAC;;;KAEjC,IAAI,CAAC,MAAM,KAAK,CAAC,GACjB;;;MAAI;;;OACH;;UAAK,SAAS,EAAC,wBAAwB;;QAAmB;OACtD;MAAK,GACV,EAAC,IAAI,EAAJ,IAAI,EAAC;KAEA;IAAQ,CAAC;GACjB;;;QArCI,QAAQ;;;AAwCd,SAAS,SAAS,CAAC,IAAU,EAAE;KAAX,QAAQ,GAAT,IAAU,CAAT,QAAQ;;AAC3B,QAAO,IAAI,IAAI,CAAC,UAAU,EAAE,SAAS,cAAc,GAAG;AACrD,SAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;EACzB,CAAC,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,EAAC,SAAS,EAAT,SAAS,EAAE,QAAQ,EAAR,QAAQ,EAAC,CAAC","file":"lib/problems.js","sourcesContent":["var React = require(\"react\");\nvar {Table, Glyphicon} = require(\"react-bootstrap\");\nvar {Type, Node} = require(\"./base\");\nvar {View} = require(\"./workbench\");\n\nvar glyphmap = {\n\terror: \"ban-circle\",\n\twarning: \"warning-sign\",\n}\n\nclass Problems {\n\tconstructor() {\n\t\tthis._problemList = [];\n\t}\n\tadd(problem) {\n\t\tproblem = {...problem, fragment: `problem_${this._problemList.length}`};\n\t\tthis._problemList.push(problem);\n\t\treturn problem;\n\t}\n\tempty() {\n\t\treturn this._problemList.length == 0;\n\t}\n\tmapProblems(fn) {\n\t\treturn this._problemList.map(fn);\n\t}\n\trender() {\n\t\tvar rows = [\n\t\t\tfor ({level, msg, fragment} of this._problemList)\n\t\t\t\tif (level !== \"info\")\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className={`problem-msg problem-${level}`}>\n\t\t\t\t\t\t\t<Glyphicon glyph={glyphmap[level]}/>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t<a href={\"#\" + fragment}>{msg}</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t]\n\t\t// TODO: Add <col> elements\n\t\treturn <Table className=\"problems\"><tbody>\n\t\t\t{\n\t\t\t\trows.length === 0 ?\n\t\t\t\t<tr><td>\n\t\t\t\t\t<div className=\"validate validate-info\">(no entries)</div>\n\t\t\t\t</td></tr> :\n\t\t\t\t{rows}\n\t\t\t}\n\t\t</tbody></Table>;\n\t}\n}\n\nfunction VProblems({problems}) {\n\treturn new View(\"problems\", function renderProblems() {\n\t\treturn problems.render();\n\t});\n}\n\nmodule.exports = {VProblems, Problems};\n"],"sourceRoot":"/source/"}