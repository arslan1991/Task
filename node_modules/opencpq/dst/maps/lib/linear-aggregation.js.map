{"version":3,"sources":["lib/linear-aggregation.js"],"names":[],"mappings":"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","file":"lib/linear-aggregation.js","sourcesContent":["var {Type} = require(\"./base\");\n\nclass SimpleAdderBase {\n\tmultiplying(factor) {\n\t\treturn new SimpleMultiplyingAdder(this, factor);\n\t}\n\tcloseMultiplying(child, factor) {\n\t\t// do nothing\n\t}\n\n\tsubAggregator() {\n\t\treturn new SimpleAdder();\n\t}\n\tcloseSubAggregator(subAggregator) {\n\t\tthis.add(subAggregator.get());\n\t}\n}\n\nclass SimpleAdder extends SimpleAdderBase {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._v = 0;\n\t}\n\tget() {\n\t\treturn this._v;\n\t}\n\tset(n) {\n\t\tthis._v = n;\n\t}\n\tadd(n = 1) {\n\t\tthis._v += n;\n\t}\n}\n\nclass SimpleMultiplyingAdder extends SimpleAdderBase {\n\tconstructor(parent, factor) {\n\t\tsuper();\n\t\tthis._parent = parent;\n\t\tthis._factor = factor;\n\t}\n\tadd(n = 1) {\n\t\tthis._parent.add(this._factor * n);\n\t}\n\n\t// or use the inherited method:\n\tmultiplying(factor) {\n\t\treturn new SimpleMultiplyingAdder(this._parent, this._factor * factor);\n\t}\n}\n\n\nclass NamedAdderBase {\n\tmultiplying(factor) {\n\t\treturn new NamedMultiplyingAdder(this, factor);\n\t}\n\tcloseMultiplying(child, factor) {\n\t\t// do nothing\n\t}\n\n\tsubAggregator() {\n\t\treturn new NamedAdder();\n\t}\n\tcloseSubAggregator(subAggregator) {\n\t\tsubAggregator.mapItems((name, n) => this.add(name, n));\n\t}\n}\n\nclass NamedAdder extends NamedAdderBase {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._data = {}\n\t}\n\tempty() {\n\t\treturn Object.keys(this._data).length == 0;\n\t}\n\tmapItems(fn, options = {}) {\n\t\tvar {sorted} = options;\n\t\tvar data = this._data;\n\t\tvar keys = Object.keys(data);\n\t\tif (sorted)\n\t\t\tkeys.sort();\n\t\treturn keys.map(k => fn(k, data[k]));\n\t}\n\tget(name) {\n\t\tvar n = this._data[name];\n\t\tif (n == undefined)\n\t\t\tn = 0;\n\t\treturn n;\n\t}\n\tset(name, n) {\n\t\tif (n == 0)\n\t\t\tdelete this._data[name];\n\t\telse\n\t\t\tthis._data[name] = n;\n\t}\n\tadd(name, n = 1) {\n\t\tthis.set(name, this.get(name) + n);\n\t}\n}\n\nclass NamedMultiplyingAdder extends NamedAdderBase {\n\tconstructor(parent, factor) {\n\t\tsuper();\n\t\tthis._parent = parent;\n\t\tthis._factor = factor;\n\t}\n\tadd(name, n = 1) {\n\t\tthis._parent.add(name, this._factor * n);\n\t}\n\n\t// or use the inherited method:\n\tmultiplying(factor) {\n\t\treturn new NamedMultiplyingAdder(this._parent, this._factor * factor);\n\t}\n}\n\n\n// The context property \"linearAggregators\" is a list of strings.  These\n// strings denote context properties which are \"linear aggregators\", for\n// which multiplication factors have to be applied in certain parts of\n// the configuration.\n// - CLinearAggregation(...) creates a linear aggregator in the context\n//   and registers it in the \"linearAggregators\" list.\n// - CMultiplying(...) applies within its subtree a factor to all the\n//   additions to any linear aggregator.\n\nfunction CLinearAggregation(name, class_, type) {\n\treturn new Type(\"linearAggregation\", function makeLinearAggregation(ctx) {\n\t\tvar {linearAggregators} = ctx;\n\t\tvar subAggregators = linearAggregators == null ? [] : linearAggregators.slice(0);\n\t\tif (subAggregators.indexOf(name) == -1)\n\t\t\tsubAggregators.push(name);\n\t\treturn type.makeNode(\n\t\t\t{...ctx, linearAggregators: subAggregators, [name]: new class_()}\n\t\t);\n\t});\n}\n\nfunction CMultiplying(factor, type) {\n\treturn new Type(\"multiplying\", function makeMultiplying(ctx) {\n\t\tvar subCtx = {...ctx, quantity: factor};\n\t\tvar {linearAggregators = []} = ctx;\n\t\tlinearAggregators.forEach(k => subCtx[k] = ctx[k].multiplying(factor));\n\t\tvar node = type.makeNode(subCtx);\n\t\tlinearAggregators.slice(0).reverse().forEach(k => ctx[k].closeMultiplying(factor, subCtx[k]));\n\t\treturn node;\n\t});\n}\n\n\nmodule.exports = {\n\tSimpleAdder,\n\tNamedAdder,\n\tCLinearAggregation, CMultiplying,\n};\n"],"sourceRoot":"/source/"}