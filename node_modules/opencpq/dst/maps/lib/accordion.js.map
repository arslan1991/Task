{"version":3,"sources":["lib/accordion.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;eAChB,OAAO,CAAC,QAAQ,CAAC;;IAAzB,IAAI,YAAJ,IAAI;;gBACW,OAAO,CAAC,SAAS,CAAC;;IAAjC,WAAW,aAAX,WAAW;;gBACqB,OAAO,CAAC,SAAS,CAAC;;IAAlD,SAAS,aAAT,SAAS;IAAE,iBAAiB,aAAjB,iBAAiB;;gBACR,OAAO,CAAC,iBAAiB,CAAC;;IAA9C,SAAS,aAAT,SAAS;IAAE,KAAK,aAAL,KAAK;;AAErB,SAAS,UAAU,CAAC,cAAc,EAAE;AACnC,QAAO,IAAI,IAAI,CAAC,WAAW,EAAE,SAAS,aAAa,CAAC,GAAG,EAAE;mBAC3B,GAAG,CAA3B,KAAK;MAAL,KAAK,8BAAG,EAAE;MAAE,QAAQ,GAAI,GAAG,CAAf,QAAQ;;AACzB,SAAO,IAAI,aAAa,CACvB,KAAK,CAAC,YAAY,IAAI,CAAC,EACvB,UAAA,GAAG;UAAI,QAAQ,cAAK,KAAK,IAAE,YAAY,EAAE,GAAG,IAAE;GAAA,EAC9C,iBAAiB,CAAC,cAAc,EAAE,GAAG,CAAC,CACtC,CAAC;EACF,CAAC,CAAC;CACH;;IAEK,aAAa;WAAb,aAAa;;AACP,UADN,aAAa,CACN,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;wBADlC,aAAa;;AAEjB,6BAFI,aAAa,6CAEX,OAAO,EAAE;AACf,MAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,MAAI,CAAC,OAAO,GAAG,MAAM,CAAC;EACtB;;cALI,aAAa;;SAMZ,kBAAG;;;AACR,UAAO;AAAC,aAAS;MAAC,SAAS,EAAE,IAAI,CAAC,SAAS,AAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,AAAC;IAClE,IAAI,CAAC,UAAU,CAAC,UAAC,IAAM,EAAE,CAAC,EAAK;SAAb,IAAI,GAAL,IAAM,CAAL,IAAI;;AACtB,SAAI,IAAI,IAAI,SAAS,EAAE;AACtB,UAAI,KAAK,GAAG,KAAK,CAAC;AAClB,UAAI,IAAI,YAAY,WAAW,EAAE;AAChC,YAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACnB,WAAI,GAAG,IAAI,CAAC,KAAK,CAAC;OAClB;AACD,aAAO;AAAC,YAAK;SAAC,QAAQ,EAAE,CAAC,AAAC,EAAC,MAAM,EAAE,KAAK,AAAC;OACxC,CAAC,IAAI,MAAK,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;OAC5B,CAAC;MACV;KACD,CAAC;IACS,CAAC;GACb;;;QArBI,aAAa;GAAS,SAAS;;AAwBrC,MAAM,CAAC,OAAO,GAAG,EAAC,UAAU,EAAV,UAAU,EAAE,aAAa,EAAb,aAAa,EAAC,CAAC","file":"lib/accordion.js","sourcesContent":["var React = require(\"react\");\nvar {Type} = require(\"./base\");\nvar {LabeledNode} = require(\"./label\");\nvar {GroupNode, preprocessMembers} = require(\"./group\");\nvar {Accordion, Panel} = require(\"react-bootstrap\");\n\nfunction CAccordion(rawMemberDecls) {\n\treturn new Type(\"accordion\", function makeAccordion(ctx) {\n\t\tvar {value = {}, updateTo} = ctx;\n\t\treturn new AccordionNode(\n\t\t\tvalue.selectedView || 0,\n\t\t\tkey => updateTo({...value, selectedView: key}),\n\t\t\tpreprocessMembers(rawMemberDecls, ctx)\n\t\t);\n\t});\n}\n\nclass AccordionNode extends GroupNode {\n\tconstructor(selected, select, members) {\n\t\tsuper(members);\n\t\tthis._selected = selected;\n\t\tthis._select = select;\n\t}\n\trender() {\n\t\treturn <Accordion activeKey={this._selected} onSelect={this._select}>\n\t\t\t{this.mapMembers(({node}, i) => {\n\t\t\t\tif (node != undefined) {\n\t\t\t\t\tvar label = \"???\";\n\t\t\t\t\tif (node instanceof LabeledNode) {\n\t\t\t\t\t\tlabel = node.label;\n\t\t\t\t\t\tnode = node.inner;\n\t\t\t\t\t}\n\t\t\t\t\treturn <Panel eventKey={i} header={label}>{\n\t\t\t\t\t\ti == this._selected && node.render()\n\t\t\t\t\t}</Panel>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Accordion>;\n\t}\n}\n\nmodule.exports = {CAccordion, AccordionNode};\n"],"sourceRoot":"/source/"}