{"version":3,"sources":["lib/fixed-table.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;eACV,OAAO,CAAC,QAAQ,CAAC;;IAA/B,IAAI,YAAJ,IAAI;IAAE,IAAI,YAAJ,IAAI;;gBACS,OAAO,CAAC,SAAS,CAAC;;IAArC,MAAM,aAAN,MAAM;IAAE,OAAO,aAAP,OAAO;;AAEpB,SAAS,iBAAiB,CAAC,cAAc,EAAE,GAAG,EAAE;AAC/C,KAAI,OAAO,GAAG,EAAE,CAAC;AACjB,UAAS,OAAO,CAAC,CAAC,EAAE;AACnB,MAAI,CAAC,IAAI,SAAS,EAAE;;GAEnB,MACI,IAAI,CAAC,YAAY,KAAK,EAC1B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KACf,IAAI,CAAC,YAAY,QAAQ,EAC7B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAEhB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACjB;AACD,QAAO,CAAC,cAAc,CAAC,CAAC;AACxB,QAAO,OAAO,CAAC;CACf;;AAED,SAAS,WAAW,CAAC,WAAW,EAAE,IAAI,EAAE;AACvC,QAAO,IAAI,IAAI,CAAC,YAAY,EAAE,SAAS,cAAc,CAAC,GAAG,EAAE;AAC1D,SAAO,IAAI,cAAc,CAAC,EAAC,OAAO,EAAE,iBAAiB,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;EAC5G,CAAC,CAAC;CACH;;;;;IAKK,cAAc;WAAd,cAAc;;UAAd,cAAc;wBAAd,cAAc;;6BAAd,cAAc;;;cAAd,cAAc;;SACb,kBAAG;kBACc,IAAI,CAAC,SAAS;OAA/B,OAAO,YAAP,OAAO;OAAE,IAAI,YAAJ,IAAI;;AAClB,UAAO;;MAAO,SAAS,EAAC,YAAY;IACnC;;;KACC,6BAAK,SAAS,EAAC,aAAa,GAAG;KAC9B,OAAO,CAAC,GAAG,CAAC,UAAC,IAAM;UAAL,IAAI,GAAL,IAAM,CAAL,IAAI;aAAM,6BAAK,SAAS,WAAS,IAAI,AAAG,GAAG;MAAA,CAAC;KACjD;IACX;;;KACC;;;MACC,+BAAK;MACJ,OAAO,CAAC,GAAG,CAAC,UAAC,KAAO;WAAN,KAAK,GAAN,KAAO,CAAN,KAAK;cAAM;;;QAAK,KAAK;QAAM;OAAA,CAAC;MACvC;KACJ,IAAI,CAAC,UAAU,CAAC,UAAC,KAAW,EAAK;UAAT,GAAG,GAAV,KAAW,CAAV,IAAI;;AACtB,aAAO;;;OACH;;;QAAK,GAAG,CAAC,KAAK;QAAM;OACtB,OAAO,CAAC,GAAG,CAAC,UAAC,KAAM,EAAK;YAAV,IAAI,GAAL,KAAM,CAAL,IAAI;;AAClB,YAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,YAAI,KAAK,GAAG,MAAM,IAAI,SAAS,GAAG,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC9D,eAAO;;;SAAK,KAAK;SAAM,CAAA;QACvB,CAAC;OACE,CAAC;MACN,CAAC;KACK;IACD,CAAC;GACT;;;QAzBI,cAAc;GAAS,IAAI;;AA4BjC,SAAS,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AACjC,QAAO,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;CAC3C;;AAED,MAAM,CAAC,OAAO,GAAG,EAAC,WAAW,EAAX,WAAW,EAAE,IAAI,EAAJ,IAAI,EAAC,CAAC","file":"lib/fixed-table.js","sourcesContent":["var React = require(\"react\");\nvar {Type, Node} = require(\"./base\");\nvar {CGroup, cmember} = require(\"./group\");\n\nfunction preprocessColumns(rawColumnsSpec, ctx) {\n\tvar columns = [];\n\tfunction process(c) {\n\t\tif (c == undefined) {\n\t\t\t// do nothing\n\t\t}\n\t\telse if (c instanceof Array)\n\t\t\tc.forEach(process);\n\t\telse if (c instanceof Function)\n\t\t\tprocess(c(ctx));\n\t\telse\n\t\t\tcolumns.push(c);\n\t}\n\tprocess(rawColumnsSpec);\n\treturn columns;\n}\n\nfunction CFixedTable(columnsSpec, rows) {\n\treturn new Type(\"fixedTable\", function makeFixedTable(ctx) {\n\t\treturn new FixedTableNode({columns: preprocessColumns(columnsSpec, ctx), rows: CGroup(rows).makeNode(ctx)});\n\t});\n}\n\n// TODO handle the case that the cells in a row are not ordered like the columns and some cells are missing or superfluous\n// TODO output a row cell only if there is a matching column\n\nclass FixedTableNode extends Node {\n\trender() {\n\t\tvar {columns, rows} = this.__options;\n\t\treturn <table className=\"fixedTable\">\n\t\t\t<colgroup>\n\t\t\t\t<col className=\"col-heading\" />\n\t\t\t\t{columns.map(({name}) => <col className={`col-${name}`} />)}\n\t\t\t</colgroup>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th/>\n\t\t\t\t\t{columns.map(({label}) => <th>{label}</th>)}\n\t\t\t\t</tr>\n\t\t\t\t{rows.mapMembers(({node: row}) => {\n\t\t\t\t\treturn <tr>\n\t\t\t\t\t    <td>{row.label}</td>\n\t\t\t\t\t\t{columns.map(({name}) => {\n\t\t\t\t\t\t\tvar member = row.inner.member(name);\n\t\t\t\t\t\t\tvar field = member == undefined ? undefined : member.render();\n\t\t\t\t\t\t\treturn <td>{field}</td>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>;\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>;\n\t}\n}\n\nfunction crow(name, label, cells) {\n\treturn cmember(name, label, CGroup(cells));\n}\n\nmodule.exports = {CFixedTable, crow};\n"],"sourceRoot":"/source/"}