{"version":3,"sources":["lib/validation.js"],"names":[],"mappings":"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","file":"lib/validation.js","sourcesContent":["var React = require(\"react\");\nvar {Glyphicon} = require(\"react-bootstrap\");\nvar {Type, Node} = require(\"./base\");\nvar {CUnit} = require(\"./primitives\");\nvar {CSideEffect} = require(\"./util\");\n\nvar glyphmap = {\n\terror: \"ban-circle\",\n\twarning: \"warning-sign\",\n\tinfo: \"info-sign\",\n}\n\nfunction CValidate(testFn, type = CUnit()) {\n\treturn new Type(\"validate\", function makeValidate(ctx) {\n\t\treturn new ValidationNode(testFn, type.makeNode(ctx), ctx);\n\t});\n}\n\nfunction renderValidation(messages) {\n\treturn <div className=\"validate\">{\n\t\t[for ({level, msg, fragment} of messages)\n\t\t\t<div className={`validate-${level}`}><a id={fragment}/><Glyphicon glyph={glyphmap[level]}/>{\" \"}{msg}</div>\n\t\t]\n\t}</div>;\n}\n\nfunction renderWithValidation(inner, messages) {\n\treturn <div>\n\t\t{inner}\n\t\t{renderValidation(messages)}\n\t</div>;\n}\n\nclass ValidationNode extends Node {\n\tconstructor(testFn, innerNode, ctx) {\n\t\tsuper();\n\t\tthis._innerNode = innerNode;\n\t\tvar messages = [];\n\t\tvar emitter = level => msg => messages.push(ctx.problems.add({level, msg}));\n\t\tvar callbacks = {\n\t\t\terror:   emitter(\"error\"),\n\t\t\twarning: emitter(\"warning\"),\n\t\t\tinfo:    emitter(\"info\")\n\t\t};\n\t\ttestFn(this, callbacks, ctx);\n\t\tthis._messages = messages;\n\t}\n\tget inner() {\n\t\treturn this._innerNode;\n\t}\n\tget value() {\n\t\treturn this.inner.value;\n\t}\n\trender() {\n\t\treturn renderWithValidation(this._innerNode.render(), this._messages);\n\t}\n}\n\nfunction CValidationMessages(messages) {\n\treturn new Type(\"validationMessages\", function makeValidationMessages(ctx) {\n\t\treturn new ValidationMessagesNode(messages.map(m => ctx.problems.add(m)));\n\t});\n}\n\nclass ValidationMessagesNode extends Node {\n\tconstructor(messages) {\n\t\tsuper();\n\t\tthis._messages = messages;\n\t}\n\trender() {\n\t\treturn renderValidation(this._messages);\n\t}\n}\n\nmodule.exports = {CValidate, CValidationMessages, renderWithValidation};\n"],"sourceRoot":"/source/"}