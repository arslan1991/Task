"use strict";

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _require = require("./primitives");

var CInteger = _require.CInteger;

var _require2 = require("./linear-aggregation");

var CMultiplying = _require2.CMultiplying;

var _require3 = require("./validation");

var CValidate = _require3.CValidate;

var _require4 = require("./group");

var CGroup = _require4.CGroup;
var cUnlabelledMember = _require4.cUnlabelledMember;

var _require5 = require("./table");

var ccolumn = _require5.ccolumn;
var CTable = _require5.CTable;

var _require6 = require("./util");

var CSideEffect = _require6.CSideEffect;

var _require7 = require("./names");

var CNameSpace = _require7.CNameSpace;

function CQuantified(type) {
	return CGroup(function (_ref) {
		var _ref$value = _ref.value;
		_ref$value = _ref$value === undefined ? {} : _ref$value;
		var quantity = _ref$value.quantity;
		return [cUnlabelledMember("quantity", CValidate(function checkQuantity(node, _ref2, ctx) {
			var error = _ref2.error;
			var warning = _ref2.warning;
			var info = _ref2.info;

			var value = node.inner.value;
			if (isNaN(value) || value < 1) error("Enter a positive whole number.");
		}, CInteger({ defaultValue: 1, className: "quantity" }))), cUnlabelledMember("value", CMultiplying(
		// TODO Don't repeat the defaulting logic of
		// IntegerNode/StringNode here.
		quantity === "" || quantity == null ? 1 : quantity, type))];
	});
}

function CQuantifiedList(options, label, type) {
	var _options = options;
	var defaultValue = _options.defaultValue;

	if (defaultValue == undefined) options = _extends({}, options, { defaultValue: [undefined] });
	return CTable(options, [ccolumn("quantity", "#"), ccolumn("value", label)], CQuantified(type));
}

module.exports = { CQuantified: CQuantified, CQuantifiedList: CQuantifiedList };
//# sourceMappingURL=../maps/lib/quantification.js.map